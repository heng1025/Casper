{"version":3,"sources":["search.js","elasticlunr.min.js","jquery.fitvids.js","gallery-card.js","infinite-scroll.js"],"names":["search","searchInput","searchButton","searchClearButton","searchResult","url","indexDump","index","update","data","posts","forEach","post","addDoc","localStorage","setItem","JSON","stringify","updated_at","gh_search_key","gh_search_migration","$","siteUrl","parse","getItem","elasticlunr","clearStopWords","removeItem","Index","load","get","replace","length","this","addField","setRef","on","e","result","target","value","expand","output","doc","title","excerpt","html","hide","show","preventDefault","val","focus","keyup","document","keyCode","t","i","o","c","d","f","h","p","v","g","m","y","S","x","w","I","b","E","D","F","_","P","k","n","pipeline","add","trimmer","stopWordFilter","stemmer","call","version","lunr","utils","warn","console","toString","EventEmitter","events","prototype","addListener","Array","slice","arguments","pop","TypeError","hasHandler","push","removeListener","indexOf","splice","emit","apply","tokenizer","isArray","filter","map","toLowerCase","split","seperator","concat","trim","defaultSeperator","setSeperator","resetSeperator","getSeperator","Pipeline","_queue","registeredFunctions","registerFunction","label","getRegisteredFunction","warnIfFunctionNotRegistered","Error","after","before","remove","run","r","s","reset","toJSON","_fields","_ref","documentStore","DocumentStore","eventEmitter","_idfCache","bind","off","fields","ref","InvertedIndex","saveDocument","addFieldLength","u","Math","sqrt","addToken","tf","removeDocByRef","isDocStored","hasDoc","getDoc","removeDoc","removeToken","updateDoc","idf","Object","hasOwnProperty","getDocFreq","log","getFields","any","Configuration","keys","a","l","fieldSearch","boost","score","sort","bool","expandToken","getDocs","fieldSearchStats","getTermFrequency","getFieldLength","mergeScores","coordNorm","use","unshift","_save","docs","docInfo","save","constructor","updateFieldLength","ational","tional","enci","anci","izer","bli","alli","entli","eli","ousli","ization","ation","ator","alism","iveness","fulness","ousness","aliti","iviti","biliti","logi","icate","ative","alize","iciti","ical","ful","ness","RegExp","z","substr","toUpperCase","test","exec","stopWords","addStopWords","resetStopWords","defaultStopWords","","able","about","across","all","almost","also","am","among","an","and","are","as","at","be","because","been","but","by","can","cannot","could","dear","did","do","does","either","else","ever","every","for","from","got","had","has","have","he","her","hers","him","his","how","however","if","in","into","is","it","its","just","least","let","like","likely","may","me","might","most","must","my","neither","no","nor","not","of","often","only","or","other","our","own","rather","said","say","says","she","should","since","so","some","than","that","the","their","them","then","there","these","they","tis","to","too","twas","us","wants","was","we","were","what","when","where","which","while","who","whom","why","will","with","would","yet","you","your","root","df","hasToken","getNode","config","buildUserConfig","buildDefaultConfig","addAllFields2UserConfig","SortedSet","elements","locationFor","toArray","floor","intersect","clone","union","define","amd","exports","module","fn","fitVids","options","head","div","settings","customSelector","ignore","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","each","selectors","ignoreList","$allVideos","find","join","aspectRatio","videoName","$this","parents","tagName","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","addEventListener","querySelectorAll","image","container","closest","ratio","attributes","style","flex","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","querySelector","onPageLoad","status","removeEventListener","onScroll","onResize","response","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive"],"mappings":"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","file":"casper.js","sourcesContent":["$(function () {\n    'use strict';\n    search();\n});\n\nfunction search() {\n    'use strict';\n    if (\n        typeof gh_search_key == 'undefined' ||\n        gh_search_key == '' ||\n        typeof gh_search_migration == 'undefined'\n    )\n        return;\n\n    var searchInput = $('.search-field');\n    var searchButton = $('.search-button');\n    var searchClearButton = $('.search-button-clear');\n    var searchResult = $('.search-result');\n\n    var url =\n        siteUrl +\n        '/ghost/api/v4/content/posts/?key=' +\n        gh_search_key +\n        '&limit=all&fields=id,title,excerpt,url,updated_at,visibility&order=updated_at%20desc&formats=plaintext';\n    var indexDump = JSON.parse(localStorage.getItem('ease_search_index'));\n    var index;\n\n    elasticlunr.clearStopWords();\n\n    localStorage.removeItem('ease_index');\n    localStorage.removeItem('ease_last');\n\n    function update(data) {\n        data.posts.forEach(function (post) {\n            index.addDoc(post);\n        });\n\n        localStorage.setItem('ease_search_index', JSON.stringify(index));\n        localStorage.setItem('ease_search_last', data.posts[0].updated_at);\n    }\n\n    if (\n        !indexDump ||\n        gh_search_migration != localStorage.getItem('ease_search_migration')\n    ) {\n        $.get(url, function (data) {\n            if (data.posts.length > 0) {\n                index = elasticlunr(function () {\n                    this.addField('title');\n                    this.addField('plaintext');\n                    this.setRef('id');\n                });\n\n                update(data);\n\n                localStorage.setItem(\n                    'ease_search_migration',\n                    gh_search_migration\n                );\n            }\n        });\n    } else {\n        index = elasticlunr.Index.load(indexDump);\n\n        $.get(\n            url +\n                \"&filter=updated_at:>'\" +\n                localStorage\n                    .getItem('ease_search_last')\n                    .replace(/\\..*/, '')\n                    .replace(/T/, ' ') +\n                \"'\",\n            function (data) {\n                if (data.posts.length > 0) {\n                    update(data);\n                }\n            }\n        );\n    }\n\n    searchInput.on('keyup', function (e) {\n        var result = index.search(e.target.value, { expand: true });\n        var output = '';\n\n        result.forEach(function (post) {\n            output +=\n                '<div class=\"search-result-row\">' +\n                ' <a class=\"search-result-row-link\" href=\"' + post.doc.url +'\">' +\n                '  <div class=\"search-result-row-title\">' + post.doc.title +'</div>'+\n                '  <div class=\"search-result-row-excerpt\">' + post.doc.excerpt + '</div>'+\n                ' </a>' +\n                '</div>';\n        });\n\n        searchResult.html(output);\n\n        if (e.target.value.length > 0) {\n            searchButton.hide();\n            searchClearButton.show();\n        } else {\n            searchClearButton.hide();\n            searchButton.show();\n        }\n    });\n\n    $('.search-form').on('submit', function (e) {\n        e.preventDefault();\n    });\n\n    searchClearButton.on('click', function () {\n        searchInput.val('').focus().keyup();\n    });\n\n    $(document).keyup(function (e) {\n        if (e.keyCode === 27) {\n            searchInput.val('').focus().keyup();\n        }\n    });\n}","/**\n * elasticlunr - http://weixsong.github.io\n * Lightweight full-text search engine in Javascript for browser search and offline search. - 0.9.5\n *\n * Copyright (C) 2017 Oliver Nightingale\n * Copyright (C) 2017 Wei Song\n * MIT Licensed\n * @license\n */\n !function(){function e(e){if(null===e||\"object\"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version=\"0.9.5\",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?\"\":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if(\"function\"!=typeof t)throw new TypeError(\"last argument must be a function\");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\\s\\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&\"object\"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn(\"Overwriting existing registered function: \"+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn(\"Function is not registered with pipeline. This may cause problems when serialising the index.\\n\",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error(\"Cannot load un-registered function: \"+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error(\"Cannot find existingFn\");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error(\"Cannot find existingFn\");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref=\"id\",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on(\"add\",\"remove\",\"update\",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn(\"version mismatch: current \"+t.version+\" importing \"+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit(\"add\",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit(\"remove\",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit(\"update\",e,this)},t.Index.prototype.idf=function(e,t){var n=\"@\"+t+\"/\"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e=\"string\"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&\"AND\"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if(\"AND\"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:\"ate\",tional:\"tion\",enci:\"ence\",anci:\"ance\",izer:\"ize\",bli:\"ble\",alli:\"al\",entli:\"ent\",eli:\"e\",ousli:\"ous\",ization:\"ize\",ation:\"ate\",ator:\"ate\",alism:\"al\",iveness:\"ive\",fulness:\"ful\",ousness:\"ous\",aliti:\"al\",iviti:\"ive\",biliti:\"ble\",logi:\"log\"},t={icate:\"ic\",ative:\"\",alize:\"al\",iciti:\"ic\",ical:\"ic\",ful:\"\",ness:\"\"},n=\"[^aeiou]\",i=\"[aeiouy]\",o=n+\"[^aeiouy]*\",r=i+\"[aeiou]*\",s=\"^(\"+o+\")?\"+r+o,u=\"^(\"+o+\")?\"+r+o+\"(\"+r+\")?$\",a=\"^(\"+o+\")?\"+r+o+r+o,l=\"^(\"+o+\")?\"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp(\"([^aeiouylsz])\\\\1$\"),w=new RegExp(\"^\"+o+i+\"[^aeiouwxy]$\"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp(\"^\"+o+i+\"[^aeiouwxy]$\"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),\"y\"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,\"$1$2\"):u.test(n)&&(n=n.replace(u,\"$1$2\")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,\"\"))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+=\"e\":a.test(n)?(s=y,n=n.replace(s,\"\")):l.test(n)&&(n+=\"e\"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+\"i\"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,\"\")),\"y\"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,\"stemmer\"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={\"\":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,\"do\":!0,does:!0,either:!0,\"else\":!0,ever:!0,every:!0,\"for\":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,\"if\":!0,\"in\":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,\"this\":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,\"while\":!0,who:!0,whom:!0,why:!0,will:!0,\"with\":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,\"stopWordFilter\"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error(\"token should not be undefined\");return e.replace(/^\\W+/,\"\").replace(/\\W+$/,\"\")},t.Pipeline.registerFunction(t.trimmer,\"trimmer\"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||\"\"==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)\"docs\"!==i&&\"df\"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||\"\";if(void 0==n||null==n)throw new Error(\"fields should not be null\");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn(\"user configuration parse failed, will use default configuration\"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:\"OR\",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i=\"OR\",o=!1;if(this.reset(),\"bool\"in e&&(i=e.bool||i),\"expand\"in e&&(o=e.expand||o),\"fields\"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn(\"field name in user configuration not found in index instance fields\");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){\"function\"==typeof define&&define.amd?define(t):\"object\"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();","/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","/* eslint-env browser */\n\n/**\n * Gallery card support\n * Used on any individual post/page\n *\n * Detects when a gallery card has been used and applies sizing to make sure\n * the display matches what is seen in the editor.\n */\n\n(function (window, document) {\n    var resizeImagesInGalleries = function resizeImagesInGalleries() {\n        var images = document.querySelectorAll('.kg-gallery-image img');\n        images.forEach(function (image) {\n            var container = image.closest('.kg-gallery-image');\n            var width = image.attributes.width.value;\n            var height = image.attributes.height.value;\n            var ratio = width / height;\n            container.style.flex = ratio + ' 1 0%';\n        });\n    };\n\n    document.addEventListener('DOMContentLoaded', resizeImagesInGalleries);\n})(window, document);\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('article.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n"]}